{"ast":null,"code":"import _classCallCheck from \"/project/sprinttracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/project/sprinttracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { union, without } from './utils/js_utils.js';\nexport var EnterLeaveCounter = /*#__PURE__*/function () {\n  function EnterLeaveCounter(isNodeInDocument) {\n    _classCallCheck(this, EnterLeaveCounter);\n    this.entered = [];\n    this.isNodeInDocument = isNodeInDocument;\n  }\n  _createClass(EnterLeaveCounter, [{\n    key: \"enter\",\n    value: function enter(enteringNode) {\n      var _this = this;\n      var previousLength = this.entered.length;\n      var isNodeEntered = function isNodeEntered(node) {\n        return _this.isNodeInDocument(node) && (!node.contains || node.contains(enteringNode));\n      };\n      this.entered = union(this.entered.filter(isNodeEntered), [enteringNode]);\n      return previousLength === 0 && this.entered.length > 0;\n    }\n  }, {\n    key: \"leave\",\n    value: function leave(leavingNode) {\n      var previousLength = this.entered.length;\n      this.entered = without(this.entered.filter(this.isNodeInDocument), leavingNode);\n      return previousLength > 0 && this.entered.length === 0;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.entered = [];\n    }\n  }]);\n  return EnterLeaveCounter;\n}();","map":{"version":3,"sources":["../src/EnterLeaveCounter.ts"],"names":["union","without","EnterLeaveCounter","entered","isNodeInDocument","enter","enteringNode","previousLength","length","isNodeEntered","node","contains","filter","leave","leavingNode","reset"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,OAAO,QAAQ,qBAAqB;AAIpD,WAAaC,iBAAiB;EAI7B,2BAAmBE,gBAA+B,EAAE;IAAA;IAHpD,IAAA,CAAQD,OAAO,GAAU,EAAE;IAI1B,IAAI,CAACC,gBAAgB,GAAGA,gBAAgB;;EACxC;IAAA;IAAA,OAEMC,eAAMC,YAAgC,EAAW;MAAA;MACvD,IAAMC,cAAc,GAAG,IAAI,CAACJ,OAAO,CAACK,MAAM;MAE1C,IAAMC,aAAa,GAAG,SAAhBA,aAAa,CAAIC,IAAU;QAAA,OAChC,KAAI,CAACN,gBAAgB,CAACM,IAAI,CAAC,KAC1B,CAACA,IAAI,CAACC,QAAQ,IAAID,IAAI,CAACC,QAAQ,CAACL,YAAY,CAAS,CAAC;MAAA;MAExD,IAAI,CAACH,OAAO,GAAGH,KAAK,CAAC,IAAI,CAACG,OAAO,CAACS,MAAM,CAACH,aAAa,CAAC,EAAE,CAACH,YAAY,CAAC,CAAC;MAExE,OAAOC,cAAc,KAAK,CAAC,IAAI,IAAI,CAACJ,OAAO,CAACK,MAAM,GAAG,CAAC;;EACtD;IAAA;IAAA,OAEMK,eAAMC,WAA+B,EAAW;MACtD,IAAMP,cAAc,GAAG,IAAI,CAACJ,OAAO,CAACK,MAAM;MAE1C,IAAI,CAACL,OAAO,GAAGF,OAAO,CACrB,IAAI,CAACE,OAAO,CAACS,MAAM,CAAC,IAAI,CAACR,gBAAgB,CAAC,EAC1CU,WAAW,CACX;MAED,OAAOP,cAAc,GAAG,CAAC,IAAI,IAAI,CAACJ,OAAO,CAACK,MAAM,KAAK,CAAC;;EACtD;IAAA;IAAA,OAEMO,iBAAc;MACpB,IAAI,CAACZ,OAAO,GAAG,EAAE;;EACjB;EAAA;AAAA","sourcesContent":["import { union, without } from './utils/js_utils.js'\n\ntype NodePredicate = (node: Node | null | undefined) => boolean\n\nexport class EnterLeaveCounter {\n\tprivate entered: any[] = []\n\tprivate isNodeInDocument: NodePredicate\n\n\tpublic constructor(isNodeInDocument: NodePredicate) {\n\t\tthis.isNodeInDocument = isNodeInDocument\n\t}\n\n\tpublic enter(enteringNode: EventTarget | null): boolean {\n\t\tconst previousLength = this.entered.length\n\n\t\tconst isNodeEntered = (node: Node): boolean =>\n\t\t\tthis.isNodeInDocument(node) &&\n\t\t\t(!node.contains || node.contains(enteringNode as Node))\n\n\t\tthis.entered = union(this.entered.filter(isNodeEntered), [enteringNode])\n\n\t\treturn previousLength === 0 && this.entered.length > 0\n\t}\n\n\tpublic leave(leavingNode: EventTarget | null): boolean {\n\t\tconst previousLength = this.entered.length\n\n\t\tthis.entered = without(\n\t\t\tthis.entered.filter(this.isNodeInDocument),\n\t\t\tleavingNode,\n\t\t)\n\n\t\treturn previousLength > 0 && this.entered.length === 0\n\t}\n\n\tpublic reset(): void {\n\t\tthis.entered = []\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}