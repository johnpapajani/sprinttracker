{"ast":null,"code":"export function matchesType(targetType, draggedItemType) {\n  if (draggedItemType === null) {\n    return targetType === null;\n  }\n  return Array.isArray(targetType) ? targetType.some(function (t) {\n    return t === draggedItemType;\n  }) : targetType === draggedItemType;\n}","map":{"version":3,"sources":["../../src/utils/matchesType.ts"],"names":["matchesType","targetType","draggedItemType","Array","isArray","some","t"],"mappings":"AAEA,OAAO,SAASA,WAAW,CAC1BC,UAA4C,EAC5CC,eAAkC,EACxB;EACV,IAAIA,eAAe,KAAK,IAAI,EAAE;IAC7B,OAAOD,UAAU,KAAK,IAAI;EAC1B;EACD,OAAOE,KAAK,CAACC,OAAO,CAACH,UAAU,CAAC,GAC5BA,UAAU,CAAkBI,IAAI,CAAC,UAACC,CAAC;IAAA,OAAKA,CAAC,KAAKJ,eAAe;EAAA,EAAC,GAC/DD,UAAU,KAAKC,eAAe;AACjC","sourcesContent":["import type { Identifier } from '../interfaces.js'\n\nexport function matchesType(\n\ttargetType: Identifier | Identifier[] | null,\n\tdraggedItemType: Identifier | null,\n): boolean {\n\tif (draggedItemType === null) {\n\t\treturn targetType === null\n\t}\n\treturn Array.isArray(targetType)\n\t\t? (targetType as Identifier[]).some((t) => t === draggedItemType)\n\t\t: targetType === draggedItemType\n}\n"]},"metadata":{},"sourceType":"module"}