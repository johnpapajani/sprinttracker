{"ast":null,"code":"import _classCallCheck from \"/project/sprinttracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/project/sprinttracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { createDragDropActions } from '../actions/dragDrop/index.js';\nexport var DragDropManagerImpl = /*#__PURE__*/function () {\n  function DragDropManagerImpl(store, monitor) {\n    var _this = this;\n    _classCallCheck(this, DragDropManagerImpl);\n    this.isSetUp = false;\n    this.handleRefCountChange = function () {\n      var shouldSetUp = _this.store.getState().refCount > 0;\n      if (_this.backend) {\n        if (shouldSetUp && !_this.isSetUp) {\n          _this.backend.setup();\n          _this.isSetUp = true;\n        } else if (!shouldSetUp && _this.isSetUp) {\n          _this.backend.teardown();\n          _this.isSetUp = false;\n        }\n      }\n    };\n    this.store = store;\n    this.monitor = monitor;\n    store.subscribe(this.handleRefCountChange);\n  }\n  _createClass(DragDropManagerImpl, [{\n    key: \"receiveBackend\",\n    value: function receiveBackend(backend) {\n      this.backend = backend;\n    }\n  }, {\n    key: \"getMonitor\",\n    value: function getMonitor() {\n      return this.monitor;\n    }\n  }, {\n    key: \"getBackend\",\n    value: function getBackend() {\n      return this.backend;\n    }\n  }, {\n    key: \"getRegistry\",\n    value: function getRegistry() {\n      return this.monitor.registry;\n    }\n  }, {\n    key: \"getActions\",\n    value: function getActions() {\n      /* eslint-disable-next-line @typescript-eslint/no-this-alias */var manager = this;\n      var dispatch = this.store.dispatch;\n      function bindActionCreator(actionCreator) {\n        return function () {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          var action = actionCreator.apply(manager, args);\n          if (typeof action !== 'undefined') {\n            dispatch(action);\n          }\n        };\n      }\n      var actions = createDragDropActions(this);\n      return Object.keys(actions).reduce(function (boundActions, key) {\n        var action = actions[key];\n        boundActions[key] = bindActionCreator(action);\n        return boundActions;\n      }, {});\n    }\n  }, {\n    key: \"dispatch\",\n    value: function dispatch(action) {\n      this.store.dispatch(action);\n    }\n  }]);\n  return DragDropManagerImpl;\n}();","map":{"version":3,"sources":["../../src/classes/DragDropManagerImpl.ts"],"names":["createDragDropActions","DragDropManagerImpl","isSetUp","store","monitor","subscribe","handleRefCountChange","receiveBackend","backend","getMonitor","getBackend","getRegistry","registry","getActions","manager","dispatch","bindActionCreator","actionCreator","args","action","apply","actions","Object","keys","reduce","boundActions","key","shouldSetUp","getState","refCount","setup","teardown"],"mappings":";;AAEA,SAASA,qBAAqB,QAAQ,8BAA8B;AAYpE,WAAaC,mBAAmB;EAM/B,6BAAmBE,KAAmB,EAAEC,OAAwB,EAAE;IAAA;IAAA;IAFlE,IAAA,CAAQF,OAAO,GAAG,KAAK;IAwDvB,IAAA,CAAQI,oBAAoB,GAAG,YAAY;MAC1C,IAAMqB,WAAW,GAAG,KAAI,CAACxB,KAAK,CAACyB,QAAQ,EAAE,CAACC,QAAQ,GAAG,CAAC;MACtD,IAAI,KAAI,CAACrB,OAAO,EAAE;QACjB,IAAImB,WAAW,IAAI,CAAC,KAAI,CAACzB,OAAO,EAAE;UACjC,KAAI,CAACM,OAAO,CAACsB,KAAK,EAAE;UACpB,KAAI,CAAC5B,OAAO,GAAG,IAAI;SACnB,MAAM,IAAI,CAACyB,WAAW,IAAI,KAAI,CAACzB,OAAO,EAAE;UACxC,KAAI,CAACM,OAAO,CAACuB,QAAQ,EAAE;UACvB,KAAI,CAAC7B,OAAO,GAAG,KAAK;QACpB;MACD;KACD;IAhEA,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtBD,KAAK,CAACE,SAAS,CAAC,IAAI,CAACC,oBAAoB,CAAC;;EAC1C;IAAA;IAAA,OAEMC,wBAAeC,OAAgB,EAAQ;MAC7C,IAAI,CAACA,OAAO,GAAGA,OAAO;;EACtB;IAAA;IAAA,OAEMC,sBAA8B;MACpC,OAAO,IAAI,CAACL,OAAO;;EACnB;IAAA;IAAA,OAEMM,sBAAsB;MAC5B,OAAO,IAAI,CAACF,OAAO;;EACnB;IAAA;IAAA,OAEMG,uBAA+B;MACrC,OAAQ,IAAI,CAACP,OAAO,CAAyBQ,QAAQ;;EACrD;IAAA;IAAA,OAEMC,sBAA8B;MACpC,+DACA,IAAMC,OAAO,GAAG,IAAI;MACpB,IAAQC,QAAQ,GAAK,IAAI,CAACZ,KAAK,CAAvBY,QAAQ;MAEhB,SAASC,iBAAiB,CAACC,aAAiC,EAAE;QAC7D,OAAO,YAAoB;UAAA,kCAAhBC,IAAW;YAAXA,IAAW;UAAA;UACrB,IAAMC,MAAM,GAAGF,aAAa,CAACG,KAAK,CAACN,OAAO,EAAEI,IAAI,CAAQ;UACxD,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;YAClCJ,QAAQ,CAACI,MAAM,CAAC;UAChB;SACD;MACD;MAED,IAAME,OAAO,GAAGrB,qBAAqB,CAAC,IAAI,CAAC;MAE3C,OAAOsB,MAAM,CAACC,IAAI,CAACF,OAAO,CAAC,CAACG,MAAM,CACjC,UAACC,YAA6B,EAAEC,GAAW,EAAK;QAC/C,IAAMP,MAAM,GAAwBE,OAAe,CAClDK,GAAG,CAEH;QAACD,YAAoB,CAACC,GAAG,CAAC,GAAGV,iBAAiB,CAACG,MAAM,CAAC;QACvD,OAAOM,YAAY;OACnB,EACD,CAAA,CAAE,CACF;;EACD;IAAA;IAAA,OAEMV,kBAASI,MAAmB,EAAQ;MAC1C,IAAI,CAAChB,KAAK,CAACY,QAAQ,CAACI,MAAM,CAAC;;EAC3B;EAAA;AAAA","sourcesContent":["import type { Action, Store } from 'redux'\n\nimport { createDragDropActions } from '../actions/dragDrop/index.js'\nimport type {\n\tActionCreator,\n\tBackend,\n\tDragDropActions,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n} from '../interfaces.js'\nimport type { State } from '../reducers/index.js'\nimport type { DragDropMonitorImpl } from './DragDropMonitorImpl.js'\n\nexport class DragDropManagerImpl implements DragDropManager {\n\tprivate store: Store<State>\n\tprivate monitor: DragDropMonitor\n\tprivate backend: Backend | undefined\n\tprivate isSetUp = false\n\n\tpublic constructor(store: Store<State>, monitor: DragDropMonitor) {\n\t\tthis.store = store\n\t\tthis.monitor = monitor\n\t\tstore.subscribe(this.handleRefCountChange)\n\t}\n\n\tpublic receiveBackend(backend: Backend): void {\n\t\tthis.backend = backend\n\t}\n\n\tpublic getMonitor(): DragDropMonitor {\n\t\treturn this.monitor\n\t}\n\n\tpublic getBackend(): Backend {\n\t\treturn this.backend as Backend\n\t}\n\n\tpublic getRegistry(): HandlerRegistry {\n\t\treturn (this.monitor as DragDropMonitorImpl).registry\n\t}\n\n\tpublic getActions(): DragDropActions {\n\t\t/* eslint-disable-next-line @typescript-eslint/no-this-alias */\n\t\tconst manager = this\n\t\tconst { dispatch } = this.store\n\n\t\tfunction bindActionCreator(actionCreator: ActionCreator<any>) {\n\t\t\treturn (...args: any[]) => {\n\t\t\t\tconst action = actionCreator.apply(manager, args as any)\n\t\t\t\tif (typeof action !== 'undefined') {\n\t\t\t\t\tdispatch(action)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst actions = createDragDropActions(this)\n\n\t\treturn Object.keys(actions).reduce(\n\t\t\t(boundActions: DragDropActions, key: string) => {\n\t\t\t\tconst action: ActionCreator<any> = (actions as any)[\n\t\t\t\t\tkey\n\t\t\t\t] as ActionCreator<any>\n\t\t\t\t;(boundActions as any)[key] = bindActionCreator(action)\n\t\t\t\treturn boundActions\n\t\t\t},\n\t\t\t{} as DragDropActions,\n\t\t)\n\t}\n\n\tpublic dispatch(action: Action<any>): void {\n\t\tthis.store.dispatch(action)\n\t}\n\n\tprivate handleRefCountChange = (): void => {\n\t\tconst shouldSetUp = this.store.getState().refCount > 0\n\t\tif (this.backend) {\n\t\t\tif (shouldSetUp && !this.isSetUp) {\n\t\t\t\tthis.backend.setup()\n\t\t\t\tthis.isSetUp = true\n\t\t\t} else if (!shouldSetUp && this.isSetUp) {\n\t\t\t\tthis.backend.teardown()\n\t\t\t\tthis.isSetUp = false\n\t\t\t}\n\t\t}\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}