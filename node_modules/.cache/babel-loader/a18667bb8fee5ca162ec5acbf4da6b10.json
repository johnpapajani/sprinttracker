{"ast":null,"code":"import _classCallCheck from \"/Users/johnpapajani/Downloads/standupleadtracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/johnpapajani/Downloads/standupleadtracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { invariant } from '@react-dnd/invariant';\nvar isCallingCanDrop = false;\nexport var DropTargetMonitorImpl = /*#__PURE__*/function () {\n  function DropTargetMonitorImpl(manager) {\n    _classCallCheck(this, DropTargetMonitorImpl);\n    this.targetId = null;\n    this.internalMonitor = manager.getMonitor();\n  }\n  _createClass(DropTargetMonitorImpl, [{\n    key: \"receiveHandlerId\",\n    value: function receiveHandlerId(targetId) {\n      this.targetId = targetId;\n    }\n  }, {\n    key: \"getHandlerId\",\n    value: function getHandlerId() {\n      return this.targetId;\n    }\n  }, {\n    key: \"subscribeToStateChange\",\n    value: function subscribeToStateChange(listener, options) {\n      return this.internalMonitor.subscribeToStateChange(listener, options);\n    }\n  }, {\n    key: \"canDrop\",\n    value: function canDrop() {\n      // Cut out early if the target id has not been set. This should prevent errors\n      // where the user has an older version of dnd-core like in\n      // https://github.com/react-dnd/react-dnd/issues/1310\n      if (!this.targetId) {\n        return false;\n      }\n      invariant(!isCallingCanDrop, 'You may not call monitor.canDrop() inside your canDrop() implementation. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target-monitor');\n      try {\n        isCallingCanDrop = true;\n        return this.internalMonitor.canDropOnTarget(this.targetId);\n      } finally {\n        isCallingCanDrop = false;\n      }\n    }\n  }, {\n    key: \"isOver\",\n    value: function isOver(options) {\n      if (!this.targetId) {\n        return false;\n      }\n      return this.internalMonitor.isOverTarget(this.targetId, options);\n    }\n  }, {\n    key: \"getItemType\",\n    value: function getItemType() {\n      return this.internalMonitor.getItemType();\n    }\n  }, {\n    key: \"getItem\",\n    value: function getItem() {\n      return this.internalMonitor.getItem();\n    }\n  }, {\n    key: \"getDropResult\",\n    value: function getDropResult() {\n      return this.internalMonitor.getDropResult();\n    }\n  }, {\n    key: \"didDrop\",\n    value: function didDrop() {\n      return this.internalMonitor.didDrop();\n    }\n  }, {\n    key: \"getInitialClientOffset\",\n    value: function getInitialClientOffset() {\n      return this.internalMonitor.getInitialClientOffset();\n    }\n  }, {\n    key: \"getInitialSourceClientOffset\",\n    value: function getInitialSourceClientOffset() {\n      return this.internalMonitor.getInitialSourceClientOffset();\n    }\n  }, {\n    key: \"getSourceClientOffset\",\n    value: function getSourceClientOffset() {\n      return this.internalMonitor.getSourceClientOffset();\n    }\n  }, {\n    key: \"getClientOffset\",\n    value: function getClientOffset() {\n      return this.internalMonitor.getClientOffset();\n    }\n  }, {\n    key: \"getDifferenceFromInitialOffset\",\n    value: function getDifferenceFromInitialOffset() {\n      return this.internalMonitor.getDifferenceFromInitialOffset();\n    }\n  }]);\n  return DropTargetMonitorImpl;\n}();","map":{"version":3,"sources":["../../src/internals/DropTargetMonitorImpl.ts"],"names":["invariant","isCallingCanDrop","DropTargetMonitorImpl","targetId","manager","internalMonitor","getMonitor","receiveHandlerId","getHandlerId","subscribeToStateChange","listener","options","canDrop","canDropOnTarget","isOver","isOverTarget","getItemType","getItem","getDropResult","didDrop","getInitialClientOffset","getInitialSourceClientOffset","getSourceClientOffset","getClientOffset","getDifferenceFromInitialOffset"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,sBAAsB;AAYhD,IAAIC,gBAAgB,GAAG,KAAK;AAE5B,WAAaC,qBAAqB;EAIjC,+BAAmBE,OAAwB,EAAE;IAAA;IAF7C,IAAA,CAAQD,QAAQ,GAAsB,IAAI;IAGzC,IAAI,CAACE,eAAe,GAAGD,OAAO,CAACE,UAAU,EAAE;;EAC3C;IAAA;IAAA,OAEMC,0BAAiBJ,QAA2B,EAAQ;MAC1D,IAAI,CAACA,QAAQ,GAAGA,QAAQ;;EACxB;IAAA;IAAA,OAEMK,wBAAkC;MACxC,OAAO,IAAI,CAACL,QAAQ;;EACpB;IAAA;IAAA,OAEMM,gCACNC,QAAkB,EAClBC,OAAuC,EACzB;MACd,OAAO,IAAI,CAACN,eAAe,CAACI,sBAAsB,CAACC,QAAQ,EAAEC,OAAO,CAAC;;EACrE;IAAA;IAAA,OAEMC,mBAAmB;MACzB;MACA;MACA;MACA,IAAI,CAAC,IAAI,CAACT,QAAQ,EAAE;QACnB,OAAO,KAAK;MACZ;MACDH,SAAS,CACR,CAACC,gBAAgB,EACjB,2EAA2E,GAC1E,8EAA8E,CAC/E;MAED,IAAI;QACHA,gBAAgB,GAAG,IAAI;QACvB,OAAO,IAAI,CAACI,eAAe,CAACQ,eAAe,CAAC,IAAI,CAACV,QAAQ,CAAC;OAC1D,SAAS;QACTF,gBAAgB,GAAG,KAAK;MACxB;;EACD;IAAA;IAAA,OAEMa,gBAAOH,OAA+B,EAAW;MACvD,IAAI,CAAC,IAAI,CAACR,QAAQ,EAAE;QACnB,OAAO,KAAK;MACZ;MACD,OAAO,IAAI,CAACE,eAAe,CAACU,YAAY,CAAC,IAAI,CAACZ,QAAQ,EAAEQ,OAAO,CAAC;;EAChE;IAAA;IAAA,OAEMK,uBAAiC;MACvC,OAAO,IAAI,CAACX,eAAe,CAACW,WAAW,EAAE;;EACzC;IAAA;IAAA,OAEMC,mBAAe;MACrB,OAAO,IAAI,CAACZ,eAAe,CAACY,OAAO,EAAE;;EACrC;IAAA;IAAA,OAEMC,yBAAqB;MAC3B,OAAO,IAAI,CAACb,eAAe,CAACa,aAAa,EAAE;;EAC3C;IAAA;IAAA,OAEMC,mBAAmB;MACzB,OAAO,IAAI,CAACd,eAAe,CAACc,OAAO,EAAE;;EACrC;IAAA;IAAA,OAEMC,kCAAyC;MAC/C,OAAO,IAAI,CAACf,eAAe,CAACe,sBAAsB,EAAE;;EACpD;IAAA;IAAA,OAEMC,wCAA+C;MACrD,OAAO,IAAI,CAAChB,eAAe,CAACgB,4BAA4B,EAAE;;EAC1D;IAAA;IAAA,OAEMC,iCAAwC;MAC9C,OAAO,IAAI,CAACjB,eAAe,CAACiB,qBAAqB,EAAE;;EACnD;IAAA;IAAA,OAEMC,2BAAkC;MACxC,OAAO,IAAI,CAAClB,eAAe,CAACkB,eAAe,EAAE;;EAC7C;IAAA;IAAA,OAEMC,0CAAiD;MACvD,OAAO,IAAI,CAACnB,eAAe,CAACmB,8BAA8B,EAAE;;EAC5D;EAAA;AAAA","sourcesContent":["import { invariant } from '@react-dnd/invariant'\nimport type {\n\tDragDropManager,\n\tDragDropMonitor,\n\tIdentifier,\n\tListener,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport type { DropTargetMonitor } from '../types/index.js'\n\nlet isCallingCanDrop = false\n\nexport class DropTargetMonitorImpl implements DropTargetMonitor {\n\tprivate internalMonitor: DragDropMonitor\n\tprivate targetId: Identifier | null = null\n\n\tpublic constructor(manager: DragDropManager) {\n\t\tthis.internalMonitor = manager.getMonitor()\n\t}\n\n\tpublic receiveHandlerId(targetId: Identifier | null): void {\n\t\tthis.targetId = targetId\n\t}\n\n\tpublic getHandlerId(): Identifier | null {\n\t\treturn this.targetId\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions?: { handlerIds?: Identifier[] },\n\t): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToStateChange(listener, options)\n\t}\n\n\tpublic canDrop(): boolean {\n\t\t// Cut out early if the target id has not been set. This should prevent errors\n\t\t// where the user has an older version of dnd-core like in\n\t\t// https://github.com/react-dnd/react-dnd/issues/1310\n\t\tif (!this.targetId) {\n\t\t\treturn false\n\t\t}\n\t\tinvariant(\n\t\t\t!isCallingCanDrop,\n\t\t\t'You may not call monitor.canDrop() inside your canDrop() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingCanDrop = true\n\t\t\treturn this.internalMonitor.canDropOnTarget(this.targetId)\n\t\t} finally {\n\t\t\tisCallingCanDrop = false\n\t\t}\n\t}\n\n\tpublic isOver(options?: { shallow?: boolean }): boolean {\n\t\tif (!this.targetId) {\n\t\t\treturn false\n\t\t}\n\t\treturn this.internalMonitor.isOverTarget(this.targetId, options)\n\t}\n\n\tpublic getItemType(): Identifier | null {\n\t\treturn this.internalMonitor.getItemType()\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.internalMonitor.getItem()\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.internalMonitor.getDropResult()\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.internalMonitor.didDrop()\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialClientOffset()\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialSourceClientOffset()\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getSourceClientOffset()\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getClientOffset()\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getDifferenceFromInitialOffset()\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}