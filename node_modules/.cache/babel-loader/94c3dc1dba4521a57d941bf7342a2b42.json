{"ast":null,"code":"import _classCallCheck from \"/project/sprinttracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/project/sprinttracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n  return target;\n}\nimport { EnterLeaveCounter } from './EnterLeaveCounter.js';\nimport { createNativeDragSource, matchNativeItemType } from './NativeDragSources/index.js';\nimport * as NativeTypes from './NativeTypes.js';\nimport { getDragPreviewOffset, getEventClientOffset, getNodeClientOffset } from './OffsetUtils.js';\nimport { OptionsReader } from './OptionsReader.js';\nexport var HTML5BackendImpl = /*#__PURE__*/function () {\n  function HTML5BackendImpl(manager, globalContext, options) {\n    var _this = this;\n    _classCallCheck(this, HTML5BackendImpl);\n    this.sourcePreviewNodes = new Map();\n    this.sourcePreviewNodeOptions = new Map();\n    this.sourceNodes = new Map();\n    this.sourceNodeOptions = new Map();\n    this.dragStartSourceIds = null;\n    this.dropTargetIds = [];\n    this.dragEnterTargetIds = [];\n    this.currentNativeSource = null;\n    this.currentNativeHandle = null;\n    this.currentDragSourceNode = null;\n    this.altKeyPressed = false;\n    this.mouseMoveTimeoutTimer = null;\n    this.asyncEndDragFrameId = null;\n    this.dragOverTargetIds = null;\n    this.lastClientOffset = null;\n    this.hoverRafId = null;\n    this.getSourceClientOffset = function (sourceId) {\n      var source = _this.sourceNodes.get(sourceId);\n      return source && getNodeClientOffset(source) || null;\n    };\n    this.endDragNativeItem = function () {\n      if (!_this.isDraggingNativeItem()) {\n        return;\n      }\n      _this.actions.endDrag();\n      if (_this.currentNativeHandle) {\n        _this.registry.removeSource(_this.currentNativeHandle);\n      }\n      _this.currentNativeHandle = null;\n      _this.currentNativeSource = null;\n    };\n    this.isNodeInDocument = function (node) {\n      // Check the node either in the main document or in the current context\n      return Boolean(node && _this.document && _this.document.body && _this.document.body.contains(node));\n    };\n    this.endDragIfSourceWasRemovedFromDOM = function () {\n      var node = _this.currentDragSourceNode;\n      if (node == null || _this.isNodeInDocument(node)) {\n        return;\n      }\n      if (_this.clearCurrentDragSourceNode() && _this.monitor.isDragging()) {\n        _this.actions.endDrag();\n      }\n      _this.cancelHover();\n    };\n    this.scheduleHover = function (dragOverTargetIds) {\n      if (_this.hoverRafId === null && typeof requestAnimationFrame !== 'undefined') {\n        _this.hoverRafId = requestAnimationFrame(function () {\n          if (_this.monitor.isDragging()) {\n            _this.actions.hover(dragOverTargetIds || [], {\n              clientOffset: _this.lastClientOffset\n            });\n          }\n          _this.hoverRafId = null;\n        });\n      }\n    };\n    this.cancelHover = function () {\n      if (_this.hoverRafId !== null && typeof cancelAnimationFrame !== 'undefined') {\n        cancelAnimationFrame(_this.hoverRafId);\n        _this.hoverRafId = null;\n      }\n    };\n    this.handleTopDragStartCapture = function () {\n      _this.clearCurrentDragSourceNode();\n      _this.dragStartSourceIds = [];\n    };\n    this.handleTopDragStart = function (e) {\n      if (e.defaultPrevented) {\n        return;\n      }\n      var dragStartSourceIds = _this.dragStartSourceIds;\n      _this.dragStartSourceIds = null;\n      var clientOffset = getEventClientOffset(e);\n      // Avoid crashing if we missed a drop event or our previous drag died\n      if (_this.monitor.isDragging()) {\n        _this.actions.endDrag();\n        _this.cancelHover();\n      }\n      // Don't publish the source just yet (see why below)\n      _this.actions.beginDrag(dragStartSourceIds || [], {\n        publishSource: false,\n        getSourceClientOffset: _this.getSourceClientOffset,\n        clientOffset: clientOffset\n      });\n      var dataTransfer = e.dataTransfer;\n      var nativeType = matchNativeItemType(dataTransfer);\n      if (_this.monitor.isDragging()) {\n        if (dataTransfer && typeof dataTransfer.setDragImage === 'function') {\n          // Use custom drag image if user specifies it.\n          // If child drag source refuses drag but parent agrees,\n          // use parent's node as drag image. Neither works in IE though.\n          var sourceId = _this.monitor.getSourceId();\n          var sourceNode = _this.sourceNodes.get(sourceId);\n          var dragPreview = _this.sourcePreviewNodes.get(sourceId) || sourceNode;\n          if (dragPreview) {\n            var _this$getCurrentSourc = _this.getCurrentSourcePreviewNodeOptions(),\n              anchorX = _this$getCurrentSourc.anchorX,\n              anchorY = _this$getCurrentSourc.anchorY,\n              offsetX = _this$getCurrentSourc.offsetX,\n              offsetY = _this$getCurrentSourc.offsetY;\n            var anchorPoint = {\n              anchorX: anchorX,\n              anchorY: anchorY\n            };\n            var offsetPoint = {\n              offsetX: offsetX,\n              offsetY: offsetY\n            };\n            var dragPreviewOffset = getDragPreviewOffset(sourceNode, dragPreview, clientOffset, anchorPoint, offsetPoint);\n            dataTransfer.setDragImage(dragPreview, dragPreviewOffset.x, dragPreviewOffset.y);\n          }\n        }\n        try {\n          // Firefox won't drag without setting data\n          dataTransfer === null || dataTransfer === void 0 ? void 0 : dataTransfer.setData('application/json', {});\n        } catch (err) {\n          // IE doesn't support MIME types in setData\n        }\n        // Store drag source node so we can check whether\n        // it is removed from DOM and trigger endDrag manually.\n        _this.setCurrentDragSourceNode(e.target);\n        // Now we are ready to publish the drag source.. or are we not?\n        var _this$getCurrentSourc2 = _this.getCurrentSourcePreviewNodeOptions(),\n          captureDraggingState = _this$getCurrentSourc2.captureDraggingState;\n        if (!captureDraggingState) {\n          // Usually we want to publish it in the next tick so that browser\n          // is able to screenshot the current (not yet dragging) state.\n          //\n          // It also neatly avoids a situation where render() returns null\n          // in the same tick for the source element, and browser freaks out.\n          setTimeout(function () {\n            return _this.actions.publishDragSource();\n          }, 0);\n        } else {\n          // In some cases the user may want to override this behavior, e.g.\n          // to work around IE not supporting custom drag previews.\n          //\n          // When using a custom drag layer, the only way to prevent\n          // the default drag preview from drawing in IE is to screenshot\n          // the dragging state in which the node itself has zero opacity\n          // and height. In this case, though, returning null from render()\n          // will abruptly end the dragging, which is not obvious.\n          //\n          // This is the reason such behavior is strictly opt-in.\n          _this.actions.publishDragSource();\n        }\n      } else if (nativeType) {\n        // A native item (such as URL) dragged from inside the document\n        _this.beginDragNativeItem(nativeType);\n      } else if (dataTransfer && !dataTransfer.types && (e.target && !e.target.hasAttribute || !e.target.hasAttribute('draggable'))) {\n        // Looks like a Safari bug: dataTransfer.types is null, but there was no draggable.\n        // Just let it drag. It's a native type (URL or text) and will be picked up in\n        // dragenter handler.\n        return;\n      } else {\n        // If by this time no drag source reacted, tell browser not to drag.\n        e.preventDefault();\n      }\n    };\n    this.handleTopDragEndCapture = function () {\n      if (_this.clearCurrentDragSourceNode() && _this.monitor.isDragging()) {\n        // Firefox can dispatch this event in an infinite loop\n        // if dragend handler does something like showing an alert.\n        // Only proceed if we have not handled it already.\n        _this.actions.endDrag();\n      }\n      _this.cancelHover();\n    };\n    this.handleTopDragEnterCapture = function (e) {\n      _this.dragEnterTargetIds = [];\n      if (_this.isDraggingNativeItem()) {\n        var ref;\n        (ref = _this.currentNativeSource) === null || ref === void 0 ? void 0 : ref.loadDataTransfer(e.dataTransfer);\n      }\n      var isFirstEnter = _this.enterLeaveCounter.enter(e.target);\n      if (!isFirstEnter || _this.monitor.isDragging()) {\n        return;\n      }\n      var dataTransfer = e.dataTransfer;\n      var nativeType = matchNativeItemType(dataTransfer);\n      if (nativeType) {\n        // A native item (such as file or URL) dragged from outside the document\n        _this.beginDragNativeItem(nativeType, dataTransfer);\n      }\n    };\n    this.handleTopDragEnter = function (e) {\n      var dragEnterTargetIds = _this.dragEnterTargetIds;\n      _this.dragEnterTargetIds = [];\n      if (!_this.monitor.isDragging()) {\n        // This is probably a native item type we don't understand.\n        return;\n      }\n      _this.altKeyPressed = e.altKey;\n      // If the target changes position as the result of `dragenter`, `dragover` might still\n      // get dispatched despite target being no longer there. The easy solution is to check\n      // whether there actually is a target before firing `hover`.\n      if (dragEnterTargetIds.length > 0) {\n        _this.actions.hover(dragEnterTargetIds, {\n          clientOffset: getEventClientOffset(e)\n        });\n      }\n      var canDrop = dragEnterTargetIds.some(function (targetId) {\n        return _this.monitor.canDropOnTarget(targetId);\n      });\n      if (canDrop) {\n        // IE requires this to fire dragover events\n        e.preventDefault();\n        if (e.dataTransfer) {\n          e.dataTransfer.dropEffect = _this.getCurrentDropEffect();\n        }\n      }\n    };\n    this.handleTopDragOverCapture = function (e) {\n      _this.dragOverTargetIds = [];\n      if (_this.isDraggingNativeItem()) {\n        var ref;\n        (ref = _this.currentNativeSource) === null || ref === void 0 ? void 0 : ref.loadDataTransfer(e.dataTransfer);\n      }\n    };\n    this.handleTopDragOver = function (e) {\n      var dragOverTargetIds = _this.dragOverTargetIds;\n      _this.dragOverTargetIds = [];\n      if (!_this.monitor.isDragging()) {\n        // This is probably a native item type we don't understand.\n        // Prevent default \"drop and blow away the whole document\" action.\n        e.preventDefault();\n        if (e.dataTransfer) {\n          e.dataTransfer.dropEffect = 'none';\n        }\n        return;\n      }\n      _this.altKeyPressed = e.altKey;\n      _this.lastClientOffset = getEventClientOffset(e);\n      _this.scheduleHover(dragOverTargetIds);\n      var canDrop = (dragOverTargetIds || []).some(function (targetId) {\n        return _this.monitor.canDropOnTarget(targetId);\n      });\n      if (canDrop) {\n        // Show user-specified drop effect.\n        e.preventDefault();\n        if (e.dataTransfer) {\n          e.dataTransfer.dropEffect = _this.getCurrentDropEffect();\n        }\n      } else if (_this.isDraggingNativeItem()) {\n        // Don't show a nice cursor but still prevent default\n        // \"drop and blow away the whole document\" action.\n        e.preventDefault();\n      } else {\n        e.preventDefault();\n        if (e.dataTransfer) {\n          e.dataTransfer.dropEffect = 'none';\n        }\n      }\n    };\n    this.handleTopDragLeaveCapture = function (e) {\n      if (_this.isDraggingNativeItem()) {\n        e.preventDefault();\n      }\n      var isLastLeave = _this.enterLeaveCounter.leave(e.target);\n      if (!isLastLeave) {\n        return;\n      }\n      if (_this.isDraggingNativeItem()) {\n        setTimeout(function () {\n          return _this.endDragNativeItem();\n        }, 0);\n      }\n      _this.cancelHover();\n    };\n    this.handleTopDropCapture = function (e) {\n      _this.dropTargetIds = [];\n      if (_this.isDraggingNativeItem()) {\n        var ref;\n        e.preventDefault();\n        (ref = _this.currentNativeSource) === null || ref === void 0 ? void 0 : ref.loadDataTransfer(e.dataTransfer);\n      } else if (matchNativeItemType(e.dataTransfer)) {\n        // Dragging some elements, like <a> and <img> may still behave like a native drag event,\n        // even if the current drag event matches a user-defined type.\n        // Stop the default behavior when we're not expecting a native item to be dropped.\n        e.preventDefault();\n      }\n      _this.enterLeaveCounter.reset();\n    };\n    this.handleTopDrop = function (e) {\n      var dropTargetIds = _this.dropTargetIds;\n      _this.dropTargetIds = [];\n      _this.actions.hover(dropTargetIds, {\n        clientOffset: getEventClientOffset(e)\n      });\n      _this.actions.drop({\n        dropEffect: _this.getCurrentDropEffect()\n      });\n      if (_this.isDraggingNativeItem()) {\n        _this.endDragNativeItem();\n      } else if (_this.monitor.isDragging()) {\n        _this.actions.endDrag();\n      }\n      _this.cancelHover();\n    };\n    this.handleSelectStart = function (e) {\n      var target = e.target;\n      // Only IE requires us to explicitly say\n      // we want drag drop operation to start\n      if (typeof target.dragDrop !== 'function') {\n        return;\n      }\n      // Inputs and textareas should be selectable\n      if (target.tagName === 'INPUT' || target.tagName === 'SELECT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n        return;\n      }\n      // For other targets, ask IE\n      // to enable drag and drop\n      e.preventDefault();\n      target.dragDrop();\n    };\n    this.options = new OptionsReader(globalContext, options);\n    this.actions = manager.getActions();\n    this.monitor = manager.getMonitor();\n    this.registry = manager.getRegistry();\n    this.enterLeaveCounter = new EnterLeaveCounter(this.isNodeInDocument);\n  }\n  _createClass(HTML5BackendImpl, [{\n    key: \"profile\",\n    value:\n    /**\n    * Generate profiling statistics for the HTML5Backend.\n    */\n    function profile() {\n      var ref, ref1;\n      return {\n        sourcePreviewNodes: this.sourcePreviewNodes.size,\n        sourcePreviewNodeOptions: this.sourcePreviewNodeOptions.size,\n        sourceNodeOptions: this.sourceNodeOptions.size,\n        sourceNodes: this.sourceNodes.size,\n        dragStartSourceIds: ((ref = this.dragStartSourceIds) === null || ref === void 0 ? void 0 : ref.length) || 0,\n        dropTargetIds: this.dropTargetIds.length,\n        dragEnterTargetIds: this.dragEnterTargetIds.length,\n        dragOverTargetIds: ((ref1 = this.dragOverTargetIds) === null || ref1 === void 0 ? void 0 : ref1.length) || 0\n      };\n    }\n    // public for test\n  }, {\n    key: \"window\",\n    get: function get() {\n      return this.options.window;\n    }\n  }, {\n    key: \"document\",\n    get: function get() {\n      return this.options.document;\n    }\n    /**\n    * Get the root element to use for event subscriptions\n    */\n  }, {\n    key: \"rootElement\",\n    get: function get() {\n      return this.options.rootElement;\n    }\n  }, {\n    key: \"setup\",\n    value: function setup() {\n      var root = this.rootElement;\n      if (root === undefined) {\n        return;\n      }\n      if (root.__isReactDndBackendSetUp) {\n        throw new Error('Cannot have two HTML5 backends at the same time.');\n      }\n      root.__isReactDndBackendSetUp = true;\n      this.addEventListeners(root);\n    }\n  }, {\n    key: \"teardown\",\n    value: function teardown() {\n      var root = this.rootElement;\n      if (root === undefined) {\n        return;\n      }\n      root.__isReactDndBackendSetUp = false;\n      this.removeEventListeners(this.rootElement);\n      this.clearCurrentDragSourceNode();\n      if (this.asyncEndDragFrameId) {\n        var ref;\n        (ref = this.window) === null || ref === void 0 ? void 0 : ref.cancelAnimationFrame(this.asyncEndDragFrameId);\n      }\n    }\n  }, {\n    key: \"connectDragPreview\",\n    value: function connectDragPreview(sourceId, node, options) {\n      var _this2 = this;\n      this.sourcePreviewNodeOptions.set(sourceId, options);\n      this.sourcePreviewNodes.set(sourceId, node);\n      return function () {\n        _this2.sourcePreviewNodes.delete(sourceId);\n        _this2.sourcePreviewNodeOptions.delete(sourceId);\n      };\n    }\n  }, {\n    key: \"connectDragSource\",\n    value: function connectDragSource(sourceId, node, options) {\n      var _this3 = this;\n      this.sourceNodes.set(sourceId, node);\n      this.sourceNodeOptions.set(sourceId, options);\n      var handleDragStart = function handleDragStart(e) {\n        return _this3.handleDragStart(e, sourceId);\n      };\n      var handleSelectStart = function handleSelectStart(e) {\n        return _this3.handleSelectStart(e);\n      };\n      node.setAttribute('draggable', 'true');\n      node.addEventListener('dragstart', handleDragStart);\n      node.addEventListener('selectstart', handleSelectStart);\n      return function () {\n        _this3.sourceNodes.delete(sourceId);\n        _this3.sourceNodeOptions.delete(sourceId);\n        node.removeEventListener('dragstart', handleDragStart);\n        node.removeEventListener('selectstart', handleSelectStart);\n        node.setAttribute('draggable', 'false');\n      };\n    }\n  }, {\n    key: \"connectDropTarget\",\n    value: function connectDropTarget(targetId, node) {\n      var _this4 = this;\n      var handleDragEnter = function handleDragEnter(e) {\n        return _this4.handleDragEnter(e, targetId);\n      };\n      var handleDragOver = function handleDragOver(e) {\n        return _this4.handleDragOver(e, targetId);\n      };\n      var handleDrop = function handleDrop(e) {\n        return _this4.handleDrop(e, targetId);\n      };\n      node.addEventListener('dragenter', handleDragEnter);\n      node.addEventListener('dragover', handleDragOver);\n      node.addEventListener('drop', handleDrop);\n      return function () {\n        node.removeEventListener('dragenter', handleDragEnter);\n        node.removeEventListener('dragover', handleDragOver);\n        node.removeEventListener('drop', handleDrop);\n      };\n    }\n  }, {\n    key: \"addEventListeners\",\n    value: function addEventListeners(target) {\n      // SSR Fix (https://github.com/react-dnd/react-dnd/pull/813\n      if (!target.addEventListener) {\n        return;\n      }\n      target.addEventListener('dragstart', this.handleTopDragStart);\n      target.addEventListener('dragstart', this.handleTopDragStartCapture, true);\n      target.addEventListener('dragend', this.handleTopDragEndCapture, true);\n      target.addEventListener('dragenter', this.handleTopDragEnter);\n      target.addEventListener('dragenter', this.handleTopDragEnterCapture, true);\n      target.addEventListener('dragleave', this.handleTopDragLeaveCapture, true);\n      target.addEventListener('dragover', this.handleTopDragOver);\n      target.addEventListener('dragover', this.handleTopDragOverCapture, true);\n      target.addEventListener('drop', this.handleTopDrop);\n      target.addEventListener('drop', this.handleTopDropCapture, true);\n    }\n  }, {\n    key: \"removeEventListeners\",\n    value: function removeEventListeners(target) {\n      // SSR Fix (https://github.com/react-dnd/react-dnd/pull/813\n      if (!target.removeEventListener) {\n        return;\n      }\n      target.removeEventListener('dragstart', this.handleTopDragStart);\n      target.removeEventListener('dragstart', this.handleTopDragStartCapture, true);\n      target.removeEventListener('dragend', this.handleTopDragEndCapture, true);\n      target.removeEventListener('dragenter', this.handleTopDragEnter);\n      target.removeEventListener('dragenter', this.handleTopDragEnterCapture, true);\n      target.removeEventListener('dragleave', this.handleTopDragLeaveCapture, true);\n      target.removeEventListener('dragover', this.handleTopDragOver);\n      target.removeEventListener('dragover', this.handleTopDragOverCapture, true);\n      target.removeEventListener('drop', this.handleTopDrop);\n      target.removeEventListener('drop', this.handleTopDropCapture, true);\n    }\n  }, {\n    key: \"getCurrentSourceNodeOptions\",\n    value: function getCurrentSourceNodeOptions() {\n      var sourceId = this.monitor.getSourceId();\n      var sourceNodeOptions = this.sourceNodeOptions.get(sourceId);\n      return _objectSpread({\n        dropEffect: this.altKeyPressed ? 'copy' : 'move'\n      }, sourceNodeOptions || {});\n    }\n  }, {\n    key: \"getCurrentDropEffect\",\n    value: function getCurrentDropEffect() {\n      if (this.isDraggingNativeItem()) {\n        // It makes more sense to default to 'copy' for native resources\n        return 'copy';\n      }\n      return this.getCurrentSourceNodeOptions().dropEffect;\n    }\n  }, {\n    key: \"getCurrentSourcePreviewNodeOptions\",\n    value: function getCurrentSourcePreviewNodeOptions() {\n      var sourceId = this.monitor.getSourceId();\n      var sourcePreviewNodeOptions = this.sourcePreviewNodeOptions.get(sourceId);\n      return _objectSpread({\n        anchorX: 0.5,\n        anchorY: 0.5,\n        captureDraggingState: false\n      }, sourcePreviewNodeOptions || {});\n    }\n  }, {\n    key: \"isDraggingNativeItem\",\n    value: function isDraggingNativeItem() {\n      var itemType = this.monitor.getItemType();\n      return Object.keys(NativeTypes).some(function (key) {\n        return NativeTypes[key] === itemType;\n      });\n    }\n  }, {\n    key: \"beginDragNativeItem\",\n    value: function beginDragNativeItem(type, dataTransfer) {\n      this.clearCurrentDragSourceNode();\n      this.currentNativeSource = createNativeDragSource(type, dataTransfer);\n      this.currentNativeHandle = this.registry.addSource(type, this.currentNativeSource);\n      this.actions.beginDrag([this.currentNativeHandle]);\n    }\n  }, {\n    key: \"setCurrentDragSourceNode\",\n    value: function setCurrentDragSourceNode(node) {\n      var _this5 = this;\n      this.clearCurrentDragSourceNode();\n      this.currentDragSourceNode = node;\n      // A timeout of > 0 is necessary to resolve Firefox issue referenced\n      // See:\n      //   * https://github.com/react-dnd/react-dnd/pull/928\n      //   * https://github.com/react-dnd/react-dnd/issues/869\n      var MOUSE_MOVE_TIMEOUT = 1000;\n      // Receiving a mouse event in the middle of a dragging operation\n      // means it has ended and the drag source node disappeared from DOM,\n      // so the browser didn't dispatch the dragend event.\n      //\n      // We need to wait before we start listening for mousemove events.\n      // This is needed because the drag preview needs to be drawn or else it fires an 'mousemove' event\n      // immediately in some browsers.\n      //\n      // See:\n      //   * https://github.com/react-dnd/react-dnd/pull/928\n      //   * https://github.com/react-dnd/react-dnd/issues/869\n      //\n      this.mouseMoveTimeoutTimer = setTimeout(function () {\n        var ref;\n        return (ref = _this5.rootElement) === null || ref === void 0 ? void 0 : ref.addEventListener('mousemove', _this5.endDragIfSourceWasRemovedFromDOM, true);\n      }, MOUSE_MOVE_TIMEOUT);\n    }\n  }, {\n    key: \"clearCurrentDragSourceNode\",\n    value: function clearCurrentDragSourceNode() {\n      if (this.currentDragSourceNode) {\n        this.currentDragSourceNode = null;\n        if (this.rootElement) {\n          var ref;\n          (ref = this.window) === null || ref === void 0 ? void 0 : ref.clearTimeout(this.mouseMoveTimeoutTimer || undefined);\n          this.rootElement.removeEventListener('mousemove', this.endDragIfSourceWasRemovedFromDOM, true);\n        }\n        this.mouseMoveTimeoutTimer = null;\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: \"handleDragStart\",\n    value: function handleDragStart(e, sourceId) {\n      if (e.defaultPrevented) {\n        return;\n      }\n      if (!this.dragStartSourceIds) {\n        this.dragStartSourceIds = [];\n      }\n      this.dragStartSourceIds.unshift(sourceId);\n    }\n  }, {\n    key: \"handleDragEnter\",\n    value: function handleDragEnter(_e, targetId) {\n      this.dragEnterTargetIds.unshift(targetId);\n    }\n  }, {\n    key: \"handleDragOver\",\n    value: function handleDragOver(_e, targetId) {\n      if (this.dragOverTargetIds === null) {\n        this.dragOverTargetIds = [];\n      }\n      this.dragOverTargetIds.unshift(targetId);\n    }\n  }, {\n    key: \"handleDrop\",\n    value: function handleDrop(_e, targetId) {\n      this.dropTargetIds.unshift(targetId);\n    }\n  }]);\n  return HTML5BackendImpl;\n}();","map":{"version":3,"sources":["../src/HTML5BackendImpl.ts"],"names":["EnterLeaveCounter","createNativeDragSource","matchNativeItemType","NativeTypes","getDragPreviewOffset","getEventClientOffset","getNodeClientOffset","OptionsReader","HTML5BackendImpl","sourcePreviewNodes","Map","sourcePreviewNodeOptions","sourceNodes","sourceNodeOptions","dragStartSourceIds","dropTargetIds","dragEnterTargetIds","currentNativeSource","currentNativeHandle","currentDragSourceNode","altKeyPressed","mouseMoveTimeoutTimer","asyncEndDragFrameId","dragOverTargetIds","lastClientOffset","hoverRafId","manager","globalContext","options","actions","getActions","monitor","getMonitor","registry","getRegistry","enterLeaveCounter","isNodeInDocument","profile","size","length","window","document","rootElement","setup","root","undefined","__isReactDndBackendSetUp","Error","addEventListeners","teardown","removeEventListeners","clearCurrentDragSourceNode","cancelAnimationFrame","connectDragPreview","sourceId","node","set","delete","connectDragSource","handleDragStart","e","handleSelectStart","setAttribute","addEventListener","removeEventListener","connectDropTarget","targetId","handleDragEnter","handleDragOver","handleDrop","target","handleTopDragStart","handleTopDragStartCapture","handleTopDragEndCapture","handleTopDragEnter","handleTopDragEnterCapture","handleTopDragLeaveCapture","handleTopDragOver","handleTopDragOverCapture","handleTopDrop","handleTopDropCapture","getCurrentSourceNodeOptions","getSourceId","get","dropEffect","getCurrentDropEffect","isDraggingNativeItem","getCurrentSourcePreviewNodeOptions","anchorX","anchorY","captureDraggingState","getSourceClientOffset","source","itemType","getItemType","Object","keys","some","key","beginDragNativeItem","type","dataTransfer","addSource","beginDrag","endDragNativeItem","endDrag","removeSource","Boolean","body","contains","endDragIfSourceWasRemovedFromDOM","isDragging","cancelHover","setCurrentDragSourceNode","MOUSE_MOVE_TIMEOUT","setTimeout","clearTimeout","scheduleHover","requestAnimationFrame","hover","clientOffset","defaultPrevented","unshift","publishSource","nativeType","setDragImage","sourceNode","dragPreview","offsetX","offsetY","anchorPoint","offsetPoint","dragPreviewOffset","x","y","setData","err","publishDragSource","types","hasAttribute","preventDefault","loadDataTransfer","isFirstEnter","enter","_e","altKey","canDrop","canDropOnTarget","isLastLeave","leave","reset","drop","dragDrop","tagName","isContentEditable"],"mappings":"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","sourcesContent":["import type {\n\tBackend,\n\tDragDropActions,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tIdentifier,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport { EnterLeaveCounter } from './EnterLeaveCounter.js'\nimport {\n\tcreateNativeDragSource,\n\tmatchNativeItemType,\n} from './NativeDragSources/index.js'\nimport type { NativeDragSource } from './NativeDragSources/NativeDragSource.js'\nimport * as NativeTypes from './NativeTypes.js'\nimport {\n\tgetDragPreviewOffset,\n\tgetEventClientOffset,\n\tgetNodeClientOffset,\n} from './OffsetUtils.js'\nimport { OptionsReader } from './OptionsReader.js'\nimport type { HTML5BackendContext, HTML5BackendOptions } from './types.js'\n\ntype RootNode = Node & { __isReactDndBackendSetUp: boolean | undefined }\n\nexport class HTML5BackendImpl implements Backend {\n\tprivate options: OptionsReader\n\n\t// React-Dnd Components\n\tprivate actions: DragDropActions\n\tprivate monitor: DragDropMonitor\n\tprivate registry: HandlerRegistry\n\n\t// Internal State\n\tprivate enterLeaveCounter: EnterLeaveCounter\n\n\tprivate sourcePreviewNodes: Map<string, Element> = new Map()\n\tprivate sourcePreviewNodeOptions: Map<string, any> = new Map()\n\tprivate sourceNodes: Map<string, Element> = new Map()\n\tprivate sourceNodeOptions: Map<string, any> = new Map()\n\n\tprivate dragStartSourceIds: string[] | null = null\n\tprivate dropTargetIds: string[] = []\n\tprivate dragEnterTargetIds: string[] = []\n\tprivate currentNativeSource: NativeDragSource | null = null\n\tprivate currentNativeHandle: Identifier | null = null\n\tprivate currentDragSourceNode: Element | null = null\n\tprivate altKeyPressed = false\n\tprivate mouseMoveTimeoutTimer: number | null = null\n\tprivate asyncEndDragFrameId: number | null = null\n\tprivate dragOverTargetIds: string[] | null = null\n\n\tprivate lastClientOffset: XYCoord | null = null\n\tprivate hoverRafId: number | null = null\n\n\tpublic constructor(\n\t\tmanager: DragDropManager,\n\t\tglobalContext?: HTML5BackendContext,\n\t\toptions?: HTML5BackendOptions,\n\t) {\n\t\tthis.options = new OptionsReader(globalContext, options)\n\t\tthis.actions = manager.getActions()\n\t\tthis.monitor = manager.getMonitor()\n\t\tthis.registry = manager.getRegistry()\n\t\tthis.enterLeaveCounter = new EnterLeaveCounter(this.isNodeInDocument)\n\t}\n\n\t/**\n\t * Generate profiling statistics for the HTML5Backend.\n\t */\n\tpublic profile(): Record<string, number> {\n\t\treturn {\n\t\t\tsourcePreviewNodes: this.sourcePreviewNodes.size,\n\t\t\tsourcePreviewNodeOptions: this.sourcePreviewNodeOptions.size,\n\t\t\tsourceNodeOptions: this.sourceNodeOptions.size,\n\t\t\tsourceNodes: this.sourceNodes.size,\n\t\t\tdragStartSourceIds: this.dragStartSourceIds?.length || 0,\n\t\t\tdropTargetIds: this.dropTargetIds.length,\n\t\t\tdragEnterTargetIds: this.dragEnterTargetIds.length,\n\t\t\tdragOverTargetIds: this.dragOverTargetIds?.length || 0,\n\t\t}\n\t}\n\n\t// public for test\n\tpublic get window(): Window | undefined {\n\t\treturn this.options.window\n\t}\n\tpublic get document(): Document | undefined {\n\t\treturn this.options.document\n\t}\n\t/**\n\t * Get the root element to use for event subscriptions\n\t */\n\tprivate get rootElement(): Node | undefined {\n\t\treturn this.options.rootElement as Node\n\t}\n\n\tpublic setup(): void {\n\t\tconst root = this.rootElement as RootNode | undefined\n\t\tif (root === undefined) {\n\t\t\treturn\n\t\t}\n\n\t\tif (root.__isReactDndBackendSetUp) {\n\t\t\tthrow new Error('Cannot have two HTML5 backends at the same time.')\n\t\t}\n\t\troot.__isReactDndBackendSetUp = true\n\t\tthis.addEventListeners(root)\n\t}\n\n\tpublic teardown(): void {\n\t\tconst root = this.rootElement as RootNode\n\t\tif (root === undefined) {\n\t\t\treturn\n\t\t}\n\n\t\troot.__isReactDndBackendSetUp = false\n\t\tthis.removeEventListeners(this.rootElement as Element)\n\t\tthis.clearCurrentDragSourceNode()\n\t\tif (this.asyncEndDragFrameId) {\n\t\t\tthis.window?.cancelAnimationFrame(this.asyncEndDragFrameId)\n\t\t}\n\t}\n\n\tpublic connectDragPreview(\n\t\tsourceId: string,\n\t\tnode: Element,\n\t\toptions: any,\n\t): Unsubscribe {\n\t\tthis.sourcePreviewNodeOptions.set(sourceId, options)\n\t\tthis.sourcePreviewNodes.set(sourceId, node)\n\n\t\treturn (): void => {\n\t\t\tthis.sourcePreviewNodes.delete(sourceId)\n\t\t\tthis.sourcePreviewNodeOptions.delete(sourceId)\n\t\t}\n\t}\n\n\tpublic connectDragSource(\n\t\tsourceId: string,\n\t\tnode: Element,\n\t\toptions: any,\n\t): Unsubscribe {\n\t\tthis.sourceNodes.set(sourceId, node)\n\t\tthis.sourceNodeOptions.set(sourceId, options)\n\n\t\tconst handleDragStart = (e: any) => this.handleDragStart(e, sourceId)\n\t\tconst handleSelectStart = (e: any) => this.handleSelectStart(e)\n\n\t\tnode.setAttribute('draggable', 'true')\n\t\tnode.addEventListener('dragstart', handleDragStart)\n\t\tnode.addEventListener('selectstart', handleSelectStart)\n\n\t\treturn (): void => {\n\t\t\tthis.sourceNodes.delete(sourceId)\n\t\t\tthis.sourceNodeOptions.delete(sourceId)\n\n\t\t\tnode.removeEventListener('dragstart', handleDragStart)\n\t\t\tnode.removeEventListener('selectstart', handleSelectStart)\n\t\t\tnode.setAttribute('draggable', 'false')\n\t\t}\n\t}\n\n\tpublic connectDropTarget(targetId: string, node: HTMLElement): Unsubscribe {\n\t\tconst handleDragEnter = (e: DragEvent) => this.handleDragEnter(e, targetId)\n\t\tconst handleDragOver = (e: DragEvent) => this.handleDragOver(e, targetId)\n\t\tconst handleDrop = (e: DragEvent) => this.handleDrop(e, targetId)\n\n\t\tnode.addEventListener('dragenter', handleDragEnter)\n\t\tnode.addEventListener('dragover', handleDragOver)\n\t\tnode.addEventListener('drop', handleDrop)\n\n\t\treturn (): void => {\n\t\t\tnode.removeEventListener('dragenter', handleDragEnter)\n\t\t\tnode.removeEventListener('dragover', handleDragOver)\n\t\t\tnode.removeEventListener('drop', handleDrop)\n\t\t}\n\t}\n\n\tprivate addEventListeners(target: Node) {\n\t\t// SSR Fix (https://github.com/react-dnd/react-dnd/pull/813\n\t\tif (!target.addEventListener) {\n\t\t\treturn\n\t\t}\n\t\ttarget.addEventListener(\n\t\t\t'dragstart',\n\t\t\tthis.handleTopDragStart as EventListener,\n\t\t)\n\t\ttarget.addEventListener('dragstart', this.handleTopDragStartCapture, true)\n\t\ttarget.addEventListener('dragend', this.handleTopDragEndCapture, true)\n\t\ttarget.addEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnter as EventListener,\n\t\t)\n\t\ttarget.addEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnterCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.addEventListener(\n\t\t\t'dragleave',\n\t\t\tthis.handleTopDragLeaveCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.addEventListener('dragover', this.handleTopDragOver as EventListener)\n\t\ttarget.addEventListener(\n\t\t\t'dragover',\n\t\t\tthis.handleTopDragOverCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.addEventListener('drop', this.handleTopDrop as EventListener)\n\t\ttarget.addEventListener(\n\t\t\t'drop',\n\t\t\tthis.handleTopDropCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t}\n\n\tprivate removeEventListeners(target: Node) {\n\t\t// SSR Fix (https://github.com/react-dnd/react-dnd/pull/813\n\t\tif (!target.removeEventListener) {\n\t\t\treturn\n\t\t}\n\t\ttarget.removeEventListener('dragstart', this.handleTopDragStart as any)\n\t\ttarget.removeEventListener(\n\t\t\t'dragstart',\n\t\t\tthis.handleTopDragStartCapture,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener('dragend', this.handleTopDragEndCapture, true)\n\t\ttarget.removeEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnter as EventListener,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnterCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragleave',\n\t\t\tthis.handleTopDragLeaveCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragover',\n\t\t\tthis.handleTopDragOver as EventListener,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragover',\n\t\t\tthis.handleTopDragOverCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener('drop', this.handleTopDrop as EventListener)\n\t\ttarget.removeEventListener(\n\t\t\t'drop',\n\t\t\tthis.handleTopDropCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t}\n\n\tprivate getCurrentSourceNodeOptions() {\n\t\tconst sourceId = this.monitor.getSourceId() as string\n\t\tconst sourceNodeOptions = this.sourceNodeOptions.get(sourceId)\n\n\t\treturn {\n\t\t\tdropEffect: this.altKeyPressed ? 'copy' : 'move',\n\t\t\t...(sourceNodeOptions || {}),\n\t\t}\n\t}\n\n\tprivate getCurrentDropEffect() {\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\t// It makes more sense to default to 'copy' for native resources\n\t\t\treturn 'copy'\n\t\t}\n\n\t\treturn this.getCurrentSourceNodeOptions().dropEffect\n\t}\n\n\tprivate getCurrentSourcePreviewNodeOptions() {\n\t\tconst sourceId = this.monitor.getSourceId() as string\n\t\tconst sourcePreviewNodeOptions = this.sourcePreviewNodeOptions.get(sourceId)\n\n\t\treturn {\n\t\t\tanchorX: 0.5,\n\t\t\tanchorY: 0.5,\n\t\t\tcaptureDraggingState: false,\n\t\t\t...(sourcePreviewNodeOptions || {}),\n\t\t}\n\t}\n\n\tprivate getSourceClientOffset = (sourceId: string): XYCoord | null => {\n\t\tconst source = this.sourceNodes.get(sourceId)\n\t\treturn (source && getNodeClientOffset(source as HTMLElement)) || null\n\t}\n\n\tprivate isDraggingNativeItem() {\n\t\tconst itemType = this.monitor.getItemType()\n\t\treturn Object.keys(NativeTypes).some(\n\t\t\t(key: string) => (NativeTypes as any)[key] === itemType,\n\t\t)\n\t}\n\n\tprivate beginDragNativeItem(type: string, dataTransfer?: DataTransfer) {\n\t\tthis.clearCurrentDragSourceNode()\n\n\t\tthis.currentNativeSource = createNativeDragSource(type, dataTransfer)\n\t\tthis.currentNativeHandle = this.registry.addSource(\n\t\t\ttype,\n\t\t\tthis.currentNativeSource,\n\t\t)\n\t\tthis.actions.beginDrag([this.currentNativeHandle])\n\t}\n\n\tprivate endDragNativeItem = (): void => {\n\t\tif (!this.isDraggingNativeItem()) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.actions.endDrag()\n\t\tif (this.currentNativeHandle) {\n\t\t\tthis.registry.removeSource(this.currentNativeHandle)\n\t\t}\n\t\tthis.currentNativeHandle = null\n\t\tthis.currentNativeSource = null\n\t}\n\n\tprivate isNodeInDocument = (node: Node | null | undefined): boolean => {\n\t\t// Check the node either in the main document or in the current context\n\t\treturn Boolean(\n\t\t\tnode &&\n\t\t\t\tthis.document &&\n\t\t\t\tthis.document.body &&\n\t\t\t\tthis.document.body.contains(node),\n\t\t)\n\t}\n\n\tprivate endDragIfSourceWasRemovedFromDOM = (): void => {\n\t\tconst node = this.currentDragSourceNode\n\t\tif (node == null || this.isNodeInDocument(node)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (this.clearCurrentDragSourceNode() && this.monitor.isDragging()) {\n\t\t\tthis.actions.endDrag()\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tprivate setCurrentDragSourceNode(node: Element | null) {\n\t\tthis.clearCurrentDragSourceNode()\n\t\tthis.currentDragSourceNode = node\n\n\t\t// A timeout of > 0 is necessary to resolve Firefox issue referenced\n\t\t// See:\n\t\t//   * https://github.com/react-dnd/react-dnd/pull/928\n\t\t//   * https://github.com/react-dnd/react-dnd/issues/869\n\t\tconst MOUSE_MOVE_TIMEOUT = 1000\n\n\t\t// Receiving a mouse event in the middle of a dragging operation\n\t\t// means it has ended and the drag source node disappeared from DOM,\n\t\t// so the browser didn't dispatch the dragend event.\n\t\t//\n\t\t// We need to wait before we start listening for mousemove events.\n\t\t// This is needed because the drag preview needs to be drawn or else it fires an 'mousemove' event\n\t\t// immediately in some browsers.\n\t\t//\n\t\t// See:\n\t\t//   * https://github.com/react-dnd/react-dnd/pull/928\n\t\t//   * https://github.com/react-dnd/react-dnd/issues/869\n\t\t//\n\t\tthis.mouseMoveTimeoutTimer = setTimeout(() => {\n\t\t\treturn this.rootElement?.addEventListener(\n\t\t\t\t'mousemove',\n\t\t\t\tthis.endDragIfSourceWasRemovedFromDOM,\n\t\t\t\ttrue,\n\t\t\t)\n\t\t}, MOUSE_MOVE_TIMEOUT) as any as number\n\t}\n\n\tprivate clearCurrentDragSourceNode() {\n\t\tif (this.currentDragSourceNode) {\n\t\t\tthis.currentDragSourceNode = null\n\n\t\t\tif (this.rootElement) {\n\t\t\t\tthis.window?.clearTimeout(this.mouseMoveTimeoutTimer || undefined)\n\t\t\t\tthis.rootElement.removeEventListener(\n\t\t\t\t\t'mousemove',\n\t\t\t\t\tthis.endDragIfSourceWasRemovedFromDOM,\n\t\t\t\t\ttrue,\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tthis.mouseMoveTimeoutTimer = null\n\t\t\treturn true\n\t\t}\n\n\t\treturn false\n\t}\n\n\tprivate scheduleHover = (dragOverTargetIds: string[] | null) => {\n\t\tif (\n\t\t\tthis.hoverRafId === null &&\n\t\t\ttypeof requestAnimationFrame !== 'undefined'\n\t\t) {\n\t\t\tthis.hoverRafId = requestAnimationFrame(() => {\n\t\t\t\tif (this.monitor.isDragging()) {\n\t\t\t\t\tthis.actions.hover(dragOverTargetIds || [], {\n\t\t\t\t\t\tclientOffset: this.lastClientOffset,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tthis.hoverRafId = null\n\t\t\t})\n\t\t}\n\t}\n\n\tprivate cancelHover = () => {\n\t\tif (\n\t\t\tthis.hoverRafId !== null &&\n\t\t\ttypeof cancelAnimationFrame !== 'undefined'\n\t\t) {\n\t\t\tcancelAnimationFrame(this.hoverRafId)\n\t\t\tthis.hoverRafId = null\n\t\t}\n\t}\n\n\tpublic handleTopDragStartCapture = (): void => {\n\t\tthis.clearCurrentDragSourceNode()\n\t\tthis.dragStartSourceIds = []\n\t}\n\n\tpublic handleDragStart(e: DragEvent, sourceId: string): void {\n\t\tif (e.defaultPrevented) {\n\t\t\treturn\n\t\t}\n\n\t\tif (!this.dragStartSourceIds) {\n\t\t\tthis.dragStartSourceIds = []\n\t\t}\n\t\tthis.dragStartSourceIds.unshift(sourceId)\n\t}\n\n\tpublic handleTopDragStart = (e: DragEvent): void => {\n\t\tif (e.defaultPrevented) {\n\t\t\treturn\n\t\t}\n\n\t\tconst { dragStartSourceIds } = this\n\t\tthis.dragStartSourceIds = null\n\n\t\tconst clientOffset = getEventClientOffset(e)\n\n\t\t// Avoid crashing if we missed a drop event or our previous drag died\n\t\tif (this.monitor.isDragging()) {\n\t\t\tthis.actions.endDrag()\n\t\t\tthis.cancelHover()\n\t\t}\n\n\t\t// Don't publish the source just yet (see why below)\n\t\tthis.actions.beginDrag(dragStartSourceIds || [], {\n\t\t\tpublishSource: false,\n\t\t\tgetSourceClientOffset: this.getSourceClientOffset,\n\t\t\tclientOffset,\n\t\t})\n\n\t\tconst { dataTransfer } = e\n\t\tconst nativeType = matchNativeItemType(dataTransfer)\n\n\t\tif (this.monitor.isDragging()) {\n\t\t\tif (dataTransfer && typeof dataTransfer.setDragImage === 'function') {\n\t\t\t\t// Use custom drag image if user specifies it.\n\t\t\t\t// If child drag source refuses drag but parent agrees,\n\t\t\t\t// use parent's node as drag image. Neither works in IE though.\n\t\t\t\tconst sourceId: string = this.monitor.getSourceId() as string\n\t\t\t\tconst sourceNode = this.sourceNodes.get(sourceId)\n\t\t\t\tconst dragPreview = this.sourcePreviewNodes.get(sourceId) || sourceNode\n\n\t\t\t\tif (dragPreview) {\n\t\t\t\t\tconst { anchorX, anchorY, offsetX, offsetY } =\n\t\t\t\t\t\tthis.getCurrentSourcePreviewNodeOptions()\n\t\t\t\t\tconst anchorPoint = { anchorX, anchorY }\n\t\t\t\t\tconst offsetPoint = { offsetX, offsetY }\n\t\t\t\t\tconst dragPreviewOffset = getDragPreviewOffset(\n\t\t\t\t\t\tsourceNode as HTMLElement,\n\t\t\t\t\t\tdragPreview as HTMLElement,\n\t\t\t\t\t\tclientOffset,\n\t\t\t\t\t\tanchorPoint,\n\t\t\t\t\t\toffsetPoint,\n\t\t\t\t\t)\n\n\t\t\t\t\tdataTransfer.setDragImage(\n\t\t\t\t\t\tdragPreview,\n\t\t\t\t\t\tdragPreviewOffset.x,\n\t\t\t\t\t\tdragPreviewOffset.y,\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\t// Firefox won't drag without setting data\n\t\t\t\tdataTransfer?.setData('application/json', {} as any)\n\t\t\t} catch (err) {\n\t\t\t\t// IE doesn't support MIME types in setData\n\t\t\t}\n\n\t\t\t// Store drag source node so we can check whether\n\t\t\t// it is removed from DOM and trigger endDrag manually.\n\t\t\tthis.setCurrentDragSourceNode(e.target as Element)\n\n\t\t\t// Now we are ready to publish the drag source.. or are we not?\n\t\t\tconst { captureDraggingState } = this.getCurrentSourcePreviewNodeOptions()\n\t\t\tif (!captureDraggingState) {\n\t\t\t\t// Usually we want to publish it in the next tick so that browser\n\t\t\t\t// is able to screenshot the current (not yet dragging) state.\n\t\t\t\t//\n\t\t\t\t// It also neatly avoids a situation where render() returns null\n\t\t\t\t// in the same tick for the source element, and browser freaks out.\n\t\t\t\tsetTimeout(() => this.actions.publishDragSource(), 0)\n\t\t\t} else {\n\t\t\t\t// In some cases the user may want to override this behavior, e.g.\n\t\t\t\t// to work around IE not supporting custom drag previews.\n\t\t\t\t//\n\t\t\t\t// When using a custom drag layer, the only way to prevent\n\t\t\t\t// the default drag preview from drawing in IE is to screenshot\n\t\t\t\t// the dragging state in which the node itself has zero opacity\n\t\t\t\t// and height. In this case, though, returning null from render()\n\t\t\t\t// will abruptly end the dragging, which is not obvious.\n\t\t\t\t//\n\t\t\t\t// This is the reason such behavior is strictly opt-in.\n\t\t\t\tthis.actions.publishDragSource()\n\t\t\t}\n\t\t} else if (nativeType) {\n\t\t\t// A native item (such as URL) dragged from inside the document\n\t\t\tthis.beginDragNativeItem(nativeType)\n\t\t} else if (\n\t\t\tdataTransfer &&\n\t\t\t!dataTransfer.types &&\n\t\t\t((e.target && !(e.target as Element).hasAttribute) ||\n\t\t\t\t!(e.target as Element).hasAttribute('draggable'))\n\t\t) {\n\t\t\t// Looks like a Safari bug: dataTransfer.types is null, but there was no draggable.\n\t\t\t// Just let it drag. It's a native type (URL or text) and will be picked up in\n\t\t\t// dragenter handler.\n\t\t\treturn\n\t\t} else {\n\t\t\t// If by this time no drag source reacted, tell browser not to drag.\n\t\t\te.preventDefault()\n\t\t}\n\t}\n\n\tpublic handleTopDragEndCapture = (): void => {\n\t\tif (this.clearCurrentDragSourceNode() && this.monitor.isDragging()) {\n\t\t\t// Firefox can dispatch this event in an infinite loop\n\t\t\t// if dragend handler does something like showing an alert.\n\t\t\t// Only proceed if we have not handled it already.\n\t\t\tthis.actions.endDrag()\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tpublic handleTopDragEnterCapture = (e: DragEvent): void => {\n\t\tthis.dragEnterTargetIds = []\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tthis.currentNativeSource?.loadDataTransfer(e.dataTransfer)\n\t\t}\n\n\t\tconst isFirstEnter = this.enterLeaveCounter.enter(e.target)\n\t\tif (!isFirstEnter || this.monitor.isDragging()) {\n\t\t\treturn\n\t\t}\n\n\t\tconst { dataTransfer } = e\n\t\tconst nativeType = matchNativeItemType(dataTransfer)\n\n\t\tif (nativeType) {\n\t\t\t// A native item (such as file or URL) dragged from outside the document\n\t\t\tthis.beginDragNativeItem(nativeType, dataTransfer as DataTransfer)\n\t\t}\n\t}\n\n\tpublic handleDragEnter(_e: DragEvent, targetId: string): void {\n\t\tthis.dragEnterTargetIds.unshift(targetId)\n\t}\n\n\tpublic handleTopDragEnter = (e: DragEvent): void => {\n\t\tconst { dragEnterTargetIds } = this\n\t\tthis.dragEnterTargetIds = []\n\n\t\tif (!this.monitor.isDragging()) {\n\t\t\t// This is probably a native item type we don't understand.\n\t\t\treturn\n\t\t}\n\n\t\tthis.altKeyPressed = e.altKey\n\n\t\t// If the target changes position as the result of `dragenter`, `dragover` might still\n\t\t// get dispatched despite target being no longer there. The easy solution is to check\n\t\t// whether there actually is a target before firing `hover`.\n\t\tif (dragEnterTargetIds.length > 0) {\n\t\t\tthis.actions.hover(dragEnterTargetIds, {\n\t\t\t\tclientOffset: getEventClientOffset(e),\n\t\t\t})\n\t\t}\n\n\t\tconst canDrop = dragEnterTargetIds.some((targetId) =>\n\t\t\tthis.monitor.canDropOnTarget(targetId),\n\t\t)\n\n\t\tif (canDrop) {\n\t\t\t// IE requires this to fire dragover events\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = this.getCurrentDropEffect()\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic handleTopDragOverCapture = (e: DragEvent): void => {\n\t\tthis.dragOverTargetIds = []\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tthis.currentNativeSource?.loadDataTransfer(e.dataTransfer)\n\t\t}\n\t}\n\n\tpublic handleDragOver(_e: DragEvent, targetId: string): void {\n\t\tif (this.dragOverTargetIds === null) {\n\t\t\tthis.dragOverTargetIds = []\n\t\t}\n\t\tthis.dragOverTargetIds.unshift(targetId)\n\t}\n\n\tpublic handleTopDragOver = (e: DragEvent): void => {\n\t\tconst { dragOverTargetIds } = this\n\t\tthis.dragOverTargetIds = []\n\n\t\tif (!this.monitor.isDragging()) {\n\t\t\t// This is probably a native item type we don't understand.\n\t\t\t// Prevent default \"drop and blow away the whole document\" action.\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = 'none'\n\t\t\t}\n\t\t\treturn\n\t\t}\n\n\t\tthis.altKeyPressed = e.altKey\n\t\tthis.lastClientOffset = getEventClientOffset(e)\n\n\t\tthis.scheduleHover(dragOverTargetIds)\n\n\t\tconst canDrop = (dragOverTargetIds || []).some((targetId) =>\n\t\t\tthis.monitor.canDropOnTarget(targetId),\n\t\t)\n\n\t\tif (canDrop) {\n\t\t\t// Show user-specified drop effect.\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = this.getCurrentDropEffect()\n\t\t\t}\n\t\t} else if (this.isDraggingNativeItem()) {\n\t\t\t// Don't show a nice cursor but still prevent default\n\t\t\t// \"drop and blow away the whole document\" action.\n\t\t\te.preventDefault()\n\t\t} else {\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = 'none'\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic handleTopDragLeaveCapture = (e: DragEvent): void => {\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\te.preventDefault()\n\t\t}\n\n\t\tconst isLastLeave = this.enterLeaveCounter.leave(e.target)\n\t\tif (!isLastLeave) {\n\t\t\treturn\n\t\t}\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tsetTimeout(() => this.endDragNativeItem(), 0)\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tpublic handleTopDropCapture = (e: DragEvent): void => {\n\t\tthis.dropTargetIds = []\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\te.preventDefault()\n\t\t\tthis.currentNativeSource?.loadDataTransfer(e.dataTransfer)\n\t\t} else if (matchNativeItemType(e.dataTransfer)) {\n\t\t\t// Dragging some elements, like <a> and <img> may still behave like a native drag event,\n\t\t\t// even if the current drag event matches a user-defined type.\n\t\t\t// Stop the default behavior when we're not expecting a native item to be dropped.\n\n\t\t\te.preventDefault()\n\t\t}\n\n\t\tthis.enterLeaveCounter.reset()\n\t}\n\n\tpublic handleDrop(_e: DragEvent, targetId: string): void {\n\t\tthis.dropTargetIds.unshift(targetId)\n\t}\n\n\tpublic handleTopDrop = (e: DragEvent): void => {\n\t\tconst { dropTargetIds } = this\n\t\tthis.dropTargetIds = []\n\n\t\tthis.actions.hover(dropTargetIds, {\n\t\t\tclientOffset: getEventClientOffset(e),\n\t\t})\n\t\tthis.actions.drop({ dropEffect: this.getCurrentDropEffect() })\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tthis.endDragNativeItem()\n\t\t} else if (this.monitor.isDragging()) {\n\t\t\tthis.actions.endDrag()\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tpublic handleSelectStart = (e: DragEvent): void => {\n\t\tconst target = e.target as HTMLElement & { dragDrop: () => void }\n\n\t\t// Only IE requires us to explicitly say\n\t\t// we want drag drop operation to start\n\t\tif (typeof target.dragDrop !== 'function') {\n\t\t\treturn\n\t\t}\n\n\t\t// Inputs and textareas should be selectable\n\t\tif (\n\t\t\ttarget.tagName === 'INPUT' ||\n\t\t\ttarget.tagName === 'SELECT' ||\n\t\t\ttarget.tagName === 'TEXTAREA' ||\n\t\t\ttarget.isContentEditable\n\t\t) {\n\t\t\treturn\n\t\t}\n\n\t\t// For other targets, ask IE\n\t\t// to enable drag and drop\n\t\te.preventDefault()\n\t\ttarget.dragDrop()\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}