{"ast":null,"code":"import _slicedToArray from \"/Users/johnpapajani/Downloads/standupleadtracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useEffect } from 'react';\nimport { useCollector } from './useCollector.js';\nimport { useDragDropManager } from './useDragDropManager.js';\n/**\n * useDragLayer Hook\n * @param collector The property collector\n */\nexport function useDragLayer(collect) {\n  var dragDropManager = useDragDropManager();\n  var monitor = dragDropManager.getMonitor();\n  var _useCollector = useCollector(monitor, collect),\n    _useCollector2 = _slicedToArray(_useCollector, 2),\n    collected = _useCollector2[0],\n    updateCollected = _useCollector2[1];\n  useEffect(function () {\n    return monitor.subscribeToOffsetChange(updateCollected);\n  });\n  useEffect(function () {\n    return monitor.subscribeToStateChange(updateCollected);\n  });\n  return collected;\n}","map":{"version":3,"sources":["../../src/hooks/useDragLayer.ts"],"names":["useEffect","useCollector","useDragDropManager","useDragLayer","collect","dragDropManager","monitor","getMonitor","collected","updateCollected","subscribeToOffsetChange","subscribeToStateChange"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AAGjC,SAASC,YAAY,QAAQ,mBAAmB;AAChD,SAASC,kBAAkB,QAAQ,yBAAyB;AAE5D;;;AAGG;AACH,OAAO,SAASC,YAAY,CAC3BC,OAAkE,EACjD;EACjB,IAAMC,eAAe,GAAGH,kBAAkB,EAAE;EAC5C,IAAMI,OAAO,GAAGD,eAAe,CAACE,UAAU,EAAE;EAC5C,oBAAqCN,YAAY,CAACK,OAAO,EAAEF,OAAO,CAAC;IAAA;IAA5DI,SAAS;IAAEC,eAAe;EAEjCT,SAAS,CAAC;IAAA,OAAMM,OAAO,CAACI,uBAAuB,CAACD,eAAe,CAAC;EAAA,EAAC;EACjET,SAAS,CAAC;IAAA,OAAMM,OAAO,CAACK,sBAAsB,CAACF,eAAe,CAAC;EAAA,EAAC;EAChE,OAAOD,SAAS;AAChB","sourcesContent":["import { useEffect } from 'react'\n\nimport type { DragLayerMonitor } from '../types/index.js'\nimport { useCollector } from './useCollector.js'\nimport { useDragDropManager } from './useDragDropManager.js'\n\n/**\n * useDragLayer Hook\n * @param collector The property collector\n */\nexport function useDragLayer<CollectedProps, DragObject = any>(\n\tcollect: (monitor: DragLayerMonitor<DragObject>) => CollectedProps,\n): CollectedProps {\n\tconst dragDropManager = useDragDropManager()\n\tconst monitor = dragDropManager.getMonitor()\n\tconst [collected, updateCollected] = useCollector(monitor, collect)\n\n\tuseEffect(() => monitor.subscribeToOffsetChange(updateCollected))\n\tuseEffect(() => monitor.subscribeToStateChange(updateCollected))\n\treturn collected\n}\n"]},"metadata":{},"sourceType":"module"}