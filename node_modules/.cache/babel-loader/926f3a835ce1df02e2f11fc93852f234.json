{"ast":null,"code":"import _defineProperty from \"/Users/johnpapajani/Downloads/standupleadtracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _nativeTypesConfig;\nimport * as NativeTypes from '../NativeTypes.js';\nimport { getDataFromDataTransfer } from './getDataFromDataTransfer.js';\nexport var nativeTypesConfig = (_nativeTypesConfig = {}, _defineProperty(_nativeTypesConfig, NativeTypes.FILE, {\n  exposeProperties: {\n    files: function files(dataTransfer) {\n      return Array.prototype.slice.call(dataTransfer.files);\n    },\n    items: function items(dataTransfer) {\n      return dataTransfer.items;\n    },\n    dataTransfer: function dataTransfer(_dataTransfer) {\n      return _dataTransfer;\n    }\n  },\n  matchesTypes: ['Files']\n}), _defineProperty(_nativeTypesConfig, NativeTypes.HTML, {\n  exposeProperties: {\n    html: function html(dataTransfer, matchesTypes) {\n      return getDataFromDataTransfer(dataTransfer, matchesTypes, '');\n    },\n    dataTransfer: function dataTransfer(_dataTransfer2) {\n      return _dataTransfer2;\n    }\n  },\n  matchesTypes: ['Html', 'text/html']\n}), _defineProperty(_nativeTypesConfig, NativeTypes.URL, {\n  exposeProperties: {\n    urls: function urls(dataTransfer, matchesTypes) {\n      return getDataFromDataTransfer(dataTransfer, matchesTypes, '').split('\\n');\n    },\n    dataTransfer: function dataTransfer(_dataTransfer3) {\n      return _dataTransfer3;\n    }\n  },\n  matchesTypes: ['Url', 'text/uri-list']\n}), _defineProperty(_nativeTypesConfig, NativeTypes.TEXT, {\n  exposeProperties: {\n    text: function text(dataTransfer, matchesTypes) {\n      return getDataFromDataTransfer(dataTransfer, matchesTypes, '');\n    },\n    dataTransfer: function dataTransfer(_dataTransfer4) {\n      return _dataTransfer4;\n    }\n  },\n  matchesTypes: ['Text', 'text/plain']\n}), _nativeTypesConfig);","map":{"version":3,"sources":["../../src/NativeDragSources/nativeTypesConfig.ts"],"names":["NativeTypes","getDataFromDataTransfer","nativeTypesConfig","FILE","exposeProperties","files","dataTransfer","Array","prototype","slice","call","items","matchesTypes","HTML","html","URL","urls","split","TEXT","text"],"mappings":";;AAAA,OAAA,KAAYA,WAAW,MAAM,mBAAmB;AAChD,SAASC,uBAAuB,QAAQ,8BAA8B;AActE,OAAO,IAAMC,iBAAiB,iEAG5BF,WAAW,CAACG,IAAI,EAAG;EACnBC,gBAAgB,EAAE;IACjBC,KAAK,EAAE,eAACC,YAA0B;MAAA,OACjCC,KAAK,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CAACJ,YAAY,CAACD,KAAK,CAAC;IAAA;IAC/CM,KAAK,EAAE,eAACL,YAA0B;MAAA,OACjCA,YAAY,CAACK,KAAK;IAAA;IACnBL,YAAY,EAAE,sBAACA,aAA0B;MAAA,OAAmBA,aAAY;IAAA;GACxE;EACDM,YAAY,EAAE,CAAC,OAAO;CACtB,uCACAZ,WAAW,CAACa,IAAI,EAAG;EACnBT,gBAAgB,EAAE;IACjBU,IAAI,EAAE,cAACR,YAA0B,EAAEM,YAAsB;MAAA,OACxDX,uBAAuB,CAACK,YAAY,EAAEM,YAAY,EAAE,EAAE,CAAC;IAAA;IACxDN,YAAY,EAAE,sBAACA,cAA0B;MAAA,OAAmBA,cAAY;IAAA;GACxE;EACDM,YAAY,EAAE,CAAC,MAAM,EAAE,WAAW;CAClC,uCACAZ,WAAW,CAACe,GAAG,EAAG;EAClBX,gBAAgB,EAAE;IACjBY,IAAI,EAAE,cAACV,YAA0B,EAAEM,YAAsB;MAAA,OACxDX,uBAAuB,CAACK,YAAY,EAAEM,YAAY,EAAE,EAAE,CAAC,CAACK,KAAK,CAAC,IAAI,CAAC;IAAA;IACpEX,YAAY,EAAE,sBAACA,cAA0B;MAAA,OAAmBA,cAAY;IAAA;GACxE;EACDM,YAAY,EAAE,CAAC,KAAK,EAAE,eAAe;CACrC,uCACAZ,WAAW,CAACkB,IAAI,EAAG;EACnBd,gBAAgB,EAAE;IACjBe,IAAI,EAAE,cAACb,YAA0B,EAAEM,YAAsB;MAAA,OACxDX,uBAAuB,CAACK,YAAY,EAAEM,YAAY,EAAE,EAAE,CAAC;IAAA;IACxDN,YAAY,EAAE,sBAACA,cAA0B;MAAA,OAAmBA,cAAY;IAAA;GACxE;EACDM,YAAY,EAAE,CAAC,MAAM,EAAE,YAAY;CACnC,sBACD","sourcesContent":["import * as NativeTypes from '../NativeTypes.js'\nimport { getDataFromDataTransfer } from './getDataFromDataTransfer.js'\n\nexport interface NativeItemConfigExposePropreties {\n\t[property: string]: (\n\t\tdataTransfer: DataTransfer,\n\t\tmatchesTypes: string[],\n\t) => any\n}\n\nexport interface NativeItemConfig {\n\texposeProperties: NativeItemConfigExposePropreties\n\tmatchesTypes: string[]\n}\n\nexport const nativeTypesConfig: {\n\t[key: string]: NativeItemConfig\n} = {\n\t[NativeTypes.FILE]: {\n\t\texposeProperties: {\n\t\t\tfiles: (dataTransfer: DataTransfer): File[] =>\n\t\t\t\tArray.prototype.slice.call(dataTransfer.files),\n\t\t\titems: (dataTransfer: DataTransfer): DataTransferItemList =>\n\t\t\t\tdataTransfer.items,\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Files'],\n\t},\n\t[NativeTypes.HTML]: {\n\t\texposeProperties: {\n\t\t\thtml: (dataTransfer: DataTransfer, matchesTypes: string[]): string =>\n\t\t\t\tgetDataFromDataTransfer(dataTransfer, matchesTypes, ''),\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Html', 'text/html'],\n\t},\n\t[NativeTypes.URL]: {\n\t\texposeProperties: {\n\t\t\turls: (dataTransfer: DataTransfer, matchesTypes: string[]): string[] =>\n\t\t\t\tgetDataFromDataTransfer(dataTransfer, matchesTypes, '').split('\\n'),\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Url', 'text/uri-list'],\n\t},\n\t[NativeTypes.TEXT]: {\n\t\texposeProperties: {\n\t\t\ttext: (dataTransfer: DataTransfer, matchesTypes: string[]): string =>\n\t\t\t\tgetDataFromDataTransfer(dataTransfer, matchesTypes, ''),\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Text', 'text/plain'],\n\t},\n}\n"]},"metadata":{},"sourceType":"module"}