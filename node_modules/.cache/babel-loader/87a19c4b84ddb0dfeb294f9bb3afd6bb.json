{"ast":null,"code":"import _slicedToArray from \"/Users/johnpapajani/Downloads/standupleadtracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/Users/johnpapajani/Downloads/standupleadtracker/src/components/Card.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport { useRef } from \"react\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport { ItemTypes } from \"./ItemTypes.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar style = {\n  border: \"1px solid gray\",\n  borderRadius: \"3px\",\n  padding: \"0.5rem 1rem\",\n  marginBottom: \".5rem\",\n  backgroundColor: \"white\",\n  cursor: \"pointer\",\n  display: \"inline-flex\"\n};\nexport var Card = function Card(_ref) {\n  _s();\n  var id = _ref.id,\n    text = _ref.text,\n    index = _ref.index,\n    moveCard = _ref.moveCard,\n    deleteCard = _ref.deleteCard,\n    startSprint = _ref.startSprint;\n  var ref = useRef(null);\n  var _useDrop = useDrop({\n      accept: ItemTypes.CARD,\n      collect: function collect(monitor) {\n        return {\n          handlerId: monitor.getHandlerId()\n        };\n      },\n      hover: function hover(item, monitor) {\n        var _ref$current;\n        if (!ref.current) {\n          return;\n        }\n        var dragIndex = item.index;\n        var hoverIndex = index;\n        // Don't replace items with themselves\n        if (dragIndex === hoverIndex) {\n          return;\n        }\n        // Determine rectangle on screen\n        var hoverBoundingRect = (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.getBoundingClientRect();\n        // Get vertical middle\n        var hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n        // Determine mouse position\n        var clientOffset = monitor.getClientOffset();\n        // Get pixels to the top\n        var hoverClientY = clientOffset.y - hoverBoundingRect.top;\n        // Only perform the move when the mouse has crossed half of the items height\n        // When dragging downwards, only move when the cursor is below 50%\n        // When dragging upwards, only move when the cursor is above 50%\n        // Dragging downwards\n        if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n          return;\n        }\n        // Dragging upwards\n        if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n          return;\n        }\n        // Time to actually perform the action\n        moveCard(dragIndex, hoverIndex);\n        // Note: we're mutating the monitor item here!\n        // Generally it's better to avoid mutations,\n        // but it's good here for the sake of performance\n        // to avoid expensive index searches.\n        item.index = hoverIndex;\n      }\n    }),\n    _useDrop2 = _slicedToArray(_useDrop, 2),\n    handlerId = _useDrop2[0].handlerId,\n    drop = _useDrop2[1];\n  var _useDrag = useDrag({\n      type: ItemTypes.CARD,\n      item: function item() {\n        return {\n          id: id,\n          index: index\n        };\n      },\n      collect: function collect(monitor) {\n        return {\n          isDragging: monitor.isDragging()\n        };\n      }\n    }),\n    _useDrag2 = _slicedToArray(_useDrag, 2),\n    isDragging = _useDrag2[0].isDragging,\n    drag = _useDrag2[1];\n  var opacity = isDragging ? 0 : 1;\n  drag(drop(ref));\n  var handleDeleteClick = function handleDeleteClick() {\n    deleteCard(id);\n  };\n  var handleStartSprint = function handleStartSprint() {\n    startSprint();\n  };\n  var handleStarts = function handleStarts() {\n    startS();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Card\",\n    ref: ref,\n    style: {\n      opacity: opacity\n    },\n    \"data-handler-id\": handlerId,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"NameLabel\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"NameButtons\",\n      children: [index === 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"SkipButton\",\n        onClick: handleStartSprint,\n        children: \"Complete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"RemoveButton\",\n        onClick: handleDeleteClick,\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, _this);\n};\n_s(Card, \"Bm9lse0dSUrMRW3+tCDIsw+uDQ8=\", false, function () {\n  return [useDrop, useDrag];\n});\n_c = Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["useRef","useDrag","useDrop","ItemTypes","style","border","borderRadius","padding","marginBottom","backgroundColor","cursor","display","Card","id","text","index","moveCard","deleteCard","startSprint","ref","accept","CARD","collect","monitor","handlerId","getHandlerId","hover","item","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","clientOffset","getClientOffset","hoverClientY","y","drop","type","isDragging","drag","opacity","handleDeleteClick","handleStartSprint","handleStarts","startS"],"sources":["/Users/johnpapajani/Downloads/standupleadtracker/src/components/Card.js"],"sourcesContent":["import { useRef } from \"react\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport { ItemTypes } from \"./ItemTypes.js\";\nconst style = {\n  border: \"1px solid gray\",\n  borderRadius: \"3px\",\n  padding: \"0.5rem 1rem\",\n  marginBottom: \".5rem\",\n  backgroundColor: \"white\",\n  cursor: \"pointer\",\n  display: \"inline-flex\"\n};\nexport const Card = ({ id, text, index, moveCard, deleteCard, startSprint }) => {\n  const ref = useRef(null);\n  const [{ handlerId }, drop] = useDrop({\n    accept: ItemTypes.CARD,\n    collect(monitor) {\n      return {\n        handlerId: monitor.getHandlerId()\n      };\n    },\n    hover(item, monitor) {\n      if (!ref.current) {\n        return;\n      }\n      const dragIndex = item.index;\n      const hoverIndex = index;\n      // Don't replace items with themselves\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n      // Determine rectangle on screen\n      const hoverBoundingRect = ref.current?.getBoundingClientRect();\n      // Get vertical middle\n      const hoverMiddleY =\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n      // Determine mouse position\n      const clientOffset = monitor.getClientOffset();\n      // Get pixels to the top\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top;\n      // Only perform the move when the mouse has crossed half of the items height\n      // When dragging downwards, only move when the cursor is below 50%\n      // When dragging upwards, only move when the cursor is above 50%\n      // Dragging downwards\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      }\n      // Dragging upwards\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      }\n      // Time to actually perform the action\n      moveCard(dragIndex, hoverIndex);\n      // Note: we're mutating the monitor item here!\n      // Generally it's better to avoid mutations,\n      // but it's good here for the sake of performance\n      // to avoid expensive index searches.\n      item.index = hoverIndex;\n    }\n  });\n  const [{ isDragging }, drag] = useDrag({\n    type: ItemTypes.CARD,\n    item: () => {\n      return { id, index };\n    },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n  const opacity = isDragging ? 0 : 1;\n  drag(drop(ref));\n\n  const handleDeleteClick = () =>{\n    deleteCard(id)\n  }\n\n  const handleStartSprint = () =>{\n    startSprint()\n  }\n\n  const handleStarts = () =>{\n    startS()\n  }\n\n  return (\n    <div className=\"Card\" ref={ref} style={{ opacity }} data-handler-id={handlerId}>\n      <div className=\"NameLabel\">{text}</div>\n      <div className=\"NameButtons\">\n        {index===0&&<button className=\"SkipButton\" onClick={handleStartSprint}>Complete</button>}\n        <button className=\"RemoveButton\" onClick={handleDeleteClick}>Remove</button>\n      </div>\n    </div>\n    \n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}